request_route {
route(REQINIT);

# CANCEL processing
if (is_method("CANCEL")) {
if (t_check_trans()) {
route(RELAY);
}
exit;
}

## handle retransmissions
# if (!is_method("ACK")) {
#         if(t_precheck_trans()) {
#                 t_check_trans();
#                 exit;
#         }
#         t_check_trans();
# }

if (is_method("INVITE") || is_method("REGISTER")) {
route(NAT);
}

if (is_method("REGISTER")) {
route(AUTH);
}

route(DIALOG);
}

route[REQINIT] {
xlog("L_DBG", "| New request - M=$rm R=$ru F=$fu IP=$si:$sp ID=$ci\n");
force_rport();
}

route[AUTH] {
if (is_method("REGISTER")){
xlog('L_DBG', '| ROUTE AUTH | REGISTER\n');
# Authorization via API
#async_task_route("RELAY_API");
if (!auth_check("$fd", "subscriber", "1")) {
force_rport();
auth_challenge("$fd", "1");
exit;
}
save("location");
exit;
}

// "INVITE" only allowed source IP address
if ((is_method("INVITE"))){
xlog('L_DBG', '| ROUTE AUTH | INVITE\n');
if(!allow_source_address("200")){
xlog("L_DBG", "Nope. Don't know who you are\n");
sl_reply("403", "Nope. Don't know who you are");
exit;
} else {
return;
}
}



return;
}

route[NAT] {
force_rport();
if (nat_uac_test("19")) {
if (is_method("REGISTER")) {
set_contact_alias();
} else {
if(is_first_hop()) {
set_contact_alias();
}
}
}
return;
}

route[DIALOG] {
            if (is_method("INVITE")) {
            route(AUTH);
            if (!lookup("location")) {
            sl_send_reply("404", "Not Found");
            exit;
            }

            handle_ruri_alias();
            record_route();
route(RELAY);
}

if (has_totag()) {
if (loose_route()) {
handle_ruri_alias();
route(RELAY);
}
}

if (is_method("ACK")) {
if ( t_check_trans() ) {
route(RELAY);
exit;
} else {
exit;
}
}
}

route[RELAY] {
           xlog("L_INFO", "| RELAY\n");
           if (has_body("application/sdp")) {
           rtpengine_manage("replace-session-connection replace-origin ICE=remove direction=internal direction=external");
           # rtpengine_manage("replace-origin");
           }
           t_on_reply("REPLY");
           t_relay();
           }

           onreply_route[REPLY] {
                        xlog("L_INFO", "| REPLY\n");
                        route(NAT);
                        if (has_body("application/sdp")) {
                        rtpengine_manage("replace-session-connection replace-origin ICE=remove direction=internal direction=external");
                        # rtpengine_manage("replace-origin");
                        }
                        }