server {
		server_name default_server;
		listen 80 default_server;
		listen [::]:80 default_server;

    	listen 9091 ssl default_server;
    	listen [::]:9091 ssl default_server;
    	keepalive_timeout 70;
    	ssl_certificate /etc/nginx/conf.d/certs/nginx.crt;
    	ssl_certificate_key /etc/nginx/conf.d/certs/nginx.key;
    	ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    	ssl_ciphers AES128-SHA:AES256-SHA:RC4-SHA:DES-CBC3-SHA:RC4-MD5;
    	ssl_session_cache shared:SSL:10m;
		ssl_session_timeout 10m;
		index index.php index.html;
    	# root /var/www/html/;

    	location / {
        		root /var/www/html/client;
        		try_files $uri $uri/ =404;
    	}

    	# #RBT test
    	# location    /demo {
        # 	rewrite ^.*$ /server/demo.php last;
    	# }

		# RBT frontend api
		location /frontend {
                rewrite ^.*$ /frontend.php last;
        }

        location = /frontend.php {
                root /var/www/html/server;
	       		include                         fastcgi_params;
        		fastcgi_param SCRIPT_FILENAME   $document_root$fastcgi_script_name;
				fastcgi_pass                    app:9000;    
        }

    	# RBT mobile api
		location /mobile {
                rewrite ^.*$ /mobile.php last;
        }

        location = /mobile.php {
                root /var/www/html/server;
	       		include                         fastcgi_params;
        		fastcgi_param SCRIPT_FILENAME   $document_root$fastcgi_script_name;
        		fastcgi_pass                    app:9000;
        }

		# RBT asterisk api
        location /asterisk {
                rewrite ^.*$ /asterisk.php last;
        }

        location = /asterisk.php {
                allow 172.28.0.0/24;
                deny all;
                root /var/www/html/server;
	       		include                         fastcgi_params;
        		fastcgi_param SCRIPT_FILENAME   $document_root$fastcgi_script_name;
        		fastcgi_pass                    app:9000;
        }

    	# RBT internal api
		location /internal {
        	rewrite ^.*$ /internal.php last;
        }

        location = /internal.php {
            	allow 172.28.0.0/24;
            	deny all;
            	root /var/www/html/server;
	       		include                         fastcgi_params;
        		fastcgi_param SCRIPT_FILENAME   $document_root$fastcgi_script_name;
        		fastcgi_pass                    app:9000;
        }

    	location ~ \.php$ {
        		try_files                       $uri =404;
        		fastcgi_split_path_info        ^(.+\.php)(/.+)$;
        		fastcgi_pass                    app:9000;
        		fastcgi_index                   index.php;
        		include                         fastcgi_params;
        		fastcgi_param SCRIPT_FILENAME   $document_root$fastcgi_script_name;
        		fastcgi_param PATH_INFO         $fastcgi_path_info;
    	}

    	location /wss {
        		proxy_pass http://ws-backend/ws;
        		proxy_http_version 1.1;
        		proxy_set_header Upgrade $http_upgrade;
        		proxy_set_header Connection "upgrade";
        		proxy_set_header Host $host;
        		proxy_set_header X-Real-IP $remote_addr;
        		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        		proxy_read_timeout 43200000;
    	}

		# uncomment this section to enable wetty support
#        location ^~ /wetty {
#                proxy_pass http://127.0.0.1:3000/wetty;
#                proxy_http_version 1.1;
#                proxy_set_header Upgrade $http_upgrade;
#                proxy_set_header Connection "upgrade";
#                proxy_read_timeout 43200000;
#                proxy_set_header X-Real-IP $remote_addr;
#                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#                proxy_set_header Host $http_host;
#                proxy_set_header X-NginX-Proxy true;
#                auth_basic "Administrator's area";
#                auth_basic_user_file /etc/nginx/wetty.passwd;
#        }

    	location /static {
        		try_files $uri $uri/ =404;
    	}

    	location /.well-known {
        		autoindex on;
        		root /var/www/html;
    	}

}

## Asterisk WS. Go to asterick conf rbt/asterisk/http.conf
upstream ws-backend {
		# enable sticky session based on IP
		ip_hash;
		server 172.28.0.1:8088;
}
