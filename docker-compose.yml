version: '3.8'

services:
  nginx:
    image: nginx:latest
    container_name: rbt_nginx
    volumes:
      - ./SmartYard-Server:/var/www/html              # RBT dir
      - ./docker/nginx/conf.d/:/etc/nginx/conf.d/     # Nginx config
    ports:
      - "${RBT_NGINX_PORT_WEB}:80"                    # RBT HTTP port
      - "${RBT_NGINX_PORT_SSL}:443"                   # RBT HTTPS port
    depends_on:
      - app
    networks:
      rbt-app-network:
        ipv4_address: "${RBT_NGINX_NETWORK_ADDRESS}"

  app:
    container_name: rbt_app
    build:
      context: .
      dockerfile: docker/app/Dockerfile
    volumes:
      - ./SmartYard-Server/:/var/www/html
      - rbt_app:/var/spool/cron/crontabs
    depends_on:
      - redis
      - clickhouse_server
      - postgres
      - mongo
    networks:
      rbt-app-network:
        ipv4_address: "${RBT_APP_NETWORK_ADDRESS}"

  redis:
    container_name: rbt_db_redis
    image: redis:7-alpine
    command: ["sh", "-c", "exec redis-server --requirepass \"${RBT_REDIS_PASSWORD}\""]
    ports:
      - "${RBT_REDIS_PORT}"
    networks:
      rbt-app-network:
        ipv4_address: "${RBT_REDIS_NETWORK_ADDRESS}"

  mongo:
    container_name: rbt_db_mongo
    image: mongo:latest
    ports:
      - "${RBT_MONGO_PORT}"
    environment:
      MONGO_INITDB_ROOT_USERNAME: "${RBT_MONGO_USERNAME}"
      MONGO_INITDB_ROOT_PASSWORD: "${RBT_MONGO_PASSWORD}"
    volumes:
      - db_mongodb:/data/db
    networks:
      rbt-app-network:
        ipv4_address: "${RBT_MONGO_NETWORK_ADDRESS}"

  postgres:
    container_name: rbt_db_postgres
    image: postgres:15.1
    environment:
      POSTGRES_DB: "${RBT_POSTGRES_DB}"
      POSTGRES_USER: "${RBT_POSTGRES_USER}"
      POSTGRES_PASSWORD: "${RBT_POSTGRES_PASSWORD}"
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "${RBT_POSTGRES_PORT}"
    volumes:
      - db_postgres:/var/lib/postgresql/data
    networks:
      rbt-app-network:
        ipv4_address: "${RBT_POSTGRESS_NETWORK_ADDRESS}"

  clickhouse_server:
    container_name: rbt_db_clickhouse
    image: clickhouse/clickhouse-server
    ports:
      - "8123"
      - "9004"
    volumes:
      - db_clickhouse:/var/lib/clickhouse
    environment:
      CLICKHOUSE_DB: "${RBT_CLICKHOUSE_DB}"
      CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT: "1"
      CLICKHOUSE_USER: "${RBT_CLICKHOUSE_USER}"
      CLICKHOUSE_PASSWORD: "${RBT_CLICKHOUSE_PASSWORD}"
    networks:
      rbt-app-network:
        ipv4_address: "${RBT_CLICKHOUSE_NETWORK_ADDRESS}"

  asterisk:
    container_name: rbt_asterisk
    build:
      context: .
      dockerfile: docker/asterisk/Dockerfile
    volumes:
      - ./SmartYard-Server/install/asterisk:/etc/asterisk
    depends_on:
      - nginx
    network_mode: host

#  event_legacy:
#    container_name: rbt_event_legacy
#    build:
#      context: .
#      dockerfile: docker/node/Dockerfile
#      target: event_legacy
#    volumes:
#      - ./SmartYard-Server/server/services/syslog/config.json:/home/node/app/config.json
#    depends_on:
#      - nginx
#      - clickhouse_server
#    ports:
#      - "${RBT_EVENT_SERVER_PORT_BEWARD}:${RBT_EVENT_SERVER_PORT_BEWARD}/udp"
#      - "${RBT_EVENT_SERVER_PORT_BEWARD_DS}:${RBT_EVENT_SERVER_PORT_BEWARD_DS}/udp"
#      - "${RBT_EVENT_SERVER_PORT_QTECH}:${RBT_EVENT_SERVER_PORT_QTECH}/udp"
#      - "${RBT_EVENT_SERVER_PORT_IS}:${RBT_EVENT_SERVER_PORT_IS}/udp"
#      - "${RBT_EVENT_SERVER_PORT_AKUVOX}:${RBT_EVENT_SERVER_PORT_AKUVOX}/udp"
#      - "${RBT_EVENT_SERVER_PORT_SPUTNIK_CLOUD}:${RBT_EVENT_SERVER_PORT_SPUTNIK_CLOUD}/udp"
#    command: npm run start
#    networks:
#      rbt-app-network:
#        ipv4_address: "${RBT_EVENT_SERVER_NETWORK_ADDRESS}"

  event:
    container_name: rbt_event
    build:
      context: .
      dockerfile: docker/node/Dockerfile
      target: event_main
    volumes:
      - ./SmartYard-Server/server/services/event/config.json:/home/node/app/config.json
    depends_on:
      - nginx
    ports:
      - "${RBT_EVENT_SERVER_PORT_BEWARD}:${RBT_EVENT_SERVER_PORT_BEWARD}/udp"
      - "${RBT_EVENT_SERVER_PORT_BEWARD_DS}:${RBT_EVENT_SERVER_PORT_BEWARD_DS}/udp"
      - "${RBT_EVENT_SERVER_PORT_QTECH}:${RBT_EVENT_SERVER_PORT_QTECH}/udp"
      - "${RBT_EVENT_SERVER_PORT_IS}:${RBT_EVENT_SERVER_PORT_IS}/udp"
      - "${RBT_EVENT_SERVER_PORT_AKUVOX}:${RBT_EVENT_SERVER_PORT_AKUVOX}/udp"
      - "${RBT_EVENT_SERVER_PORT_SPUTNIK_CLOUD}:${RBT_EVENT_SERVER_PORT_SPUTNIK_CLOUD}/udp"
    command: npm run start
    networks:
      rbt-app-network:
        ipv4_address: "${RBT_EVENT_SERVER_NETWORK_ADDRESS}"

  mosquitto:
    image: eclipse-mosquitto
    container_name: rbt_mqtt
    #TODO: add configs
    #volumes:
    ports:
      - "${RBT_MOSQUITTO_PORT}:1883"
      - "${RBT_MOSQUITTO_PORT_WS}:8081"
    networks:
      rbt-app-network:
        ipv4_address: "${RBT_MOSQUITTO_NETWORK_ADDRESS}"

#  kamailio:
#    container_name: rbt_kamailio
#    build:
#      context: .
#      dockerfile: docker/kamailio/Dockerfile
#    network_mode: host
#    volumes:
#      - ./SmartYard-Server/install/kamailio/:/etc/kamailio
#    depends_on:
#      - app
#      - rtpengine
#
#  kamailio_dev:
#    container_name: rbt_kamailio_dev
#    build:
#      context: .
#      dockerfile: docker/kamailio/Dockerfile_dev
#    network_mode: host
#    volumes:
#      - ./docker/kamailio/dev/v4/:/etc/kamailio
#    depends_on:
#      - app
#      - rtpengine
#
#  rtpengine:
#    container_name: rbt_rtpengine
#    image: fonoster/rtpengine:latest
#    network_mode: host
#    volumes:
#      - ./SmartYard-Server/install/rtpengine/rtpengine.conf:/etc/rtpengine/rtpengine.conf
#    command: rtpengine --config-file=/etc/rtpengine/rtpengine.conf --foreground

volumes:
  db_postgres:
  db_clickhouse:
  db_mongodb:
  rbt_app:

networks:
  rbt-app-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: "${RBT_NETWORK_ADDRESS}"
          gateway: "${RBT_NETWORK_GW}"
